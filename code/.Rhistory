library(rcompanion)
library(brant)
brant(fittest)
coef(summary(fittest))
library(VGAM)
fitgom <- vglm(quality ~ (free.sulfur.dioxide + pH + total.sulfur.dioxide + chlorides + sulphates + volatile.acidity + alcohol)^2, family = cumulative(parallel = FALSE), data = winedata)
warning()
warning(fitgom)
fitgom <- vglm(quality ~ free.sulfur.dioxide + pH + total.sulfur.dioxide + chlorides + sulphates + volatile.acidity + alcohol, family = cumulative(parallel = FALSE), data = winedata)
library(emmeans)
install.packages('emmeans')
library(emmeans)
table(quality, free.sulfur.dioxide, data=winedata)
table(winedata$quality, winedata$free.sulfur.dioxide)
winedata$fixed.acidity <- scale(winedata$fixed.acidity)
winedata$volatile.acidity <- scale(winedata$volatile.acidity)
winedata$citric.acid <- scale(winedata$citric.acid)
winedata$residual.sugar <- scale(winedata$residual.sugar)
winedata$chlorides <- scale(winedata$chlorides)
winedata$free.sulfur.dioxide <- scale(winedata$free.sulfur.dioxide)
winedata$total.sulfur.dioxide <- scale(winedata$total.sulfur.dioxide)
winedata$density <- scale(winedata$density)
winedata$pH <- scale(winedata$pH)
winedata$sulphates <- scale(winedata$sulphates)
winedata$alcohol <- scale(winedata$alcohol)
fittest <- polr(as.factor(quality) ~ free.sulfur.dioxide + pH + total.sulfur.dioxide + chlorides + sulphates + volatile.acidity + alcohol, data = winedata, Hess = TRUE)
brant(fittest)
fitgom <- vglm(quality ~ free.sulfur.dioxide + pH + total.sulfur.dioxide + chlorides + sulphates + volatile.acidity + alcohol, family = cumulative(parallel = FALSE), data = winedata)
View(fitologlog)
predictors <- c("x1", "x2", "x3", "x4", "x5", "x6", "x7",'x8','x9','x10','x11')
response <- "response"
nullvglm <- vglm(as.formula(paste(response,'~1')), family = cumulative(parallel = FALSE),data = winedata)
nullvglm <- vglm(as.formula(paste(response,'~1')), family = cumulative(parallel = FALSE),data = winedata)
predictors <- c("fixed.acidity", "volatile.acidity", "citric.acid", "residual.sugar", "chlorides", "free.sulfur.dioxide", "total.sulfur.dioxide",'density','pH','sulphates','alcohol')
response <- "quality"
nullvglm <- vglm(as.formula(paste(response,'~1')), family = cumulative(parallel = FALSE),data = winedata)
bestaic <- AIC(nullvglm)
currentvars <- c()
improve <- TRUE
while (improve) {
improve = FALSE
aiclist <- data.frame(var = character(), AIC = numeric())
for(var in setdiff(predictors, currentvars)){
fmla <- as.formula(paste(response, '~', paste(c(currentvars,var),collapse ='+')))
modelvglm <- try(vglm(fmla,family=cumulative(parallel=FALSE),data=winedata),silent = TRUE)
if(!inherits(modelvglm, 'try-error')){
modelaic <- AIC(model)
aiclist <- rbind(aiclist, data.frame(var=var, AIC = modelaic))
}
}
if (nrow(aic_list) > 0) {
bestrow <- aic_list[which.min(aic_list$AIC), ]
if (best_row$AIC < best_aic - 2) {  # AIC must improve by at least 2
bestaic <- best_row$AIC
currentvars <- c(current_vars, best_row$var)
improve <- TRUE
cat("Added:", best_row$var, "Current AIC:", best_aic, "\n")
}
}
}
improve <- TRUE
while (improve) {
improve = FALSE
aiclist <- data.frame(var = character(), AIC = numeric())
for(var in setdiff(predictors, currentvars)){
fmla <- as.formula(paste(response, '~', paste(c(currentvars,var),collapse ='+')))
modelvglm <- try(vglm(fmla,family=cumulative(parallel=FALSE),data=winedata),silent = TRUE)
if(!inherits(modelvglm, 'try-error')){
modelaic <- AIC(modelvglm)
aiclist <- rbind(aiclist, data.frame(var=var, AIC = modelaic))
}
}
if (nrow(aic_list) > 0) {
bestrow <- aic_list[which.min(aic_list$AIC), ]
if (best_row$AIC < best_aic - 2) {  # AIC must improve by at least 2
bestaic <- best_row$AIC
currentvars <- c(current_vars, best_row$var)
improve <- TRUE
cat("Added:", best_row$var, "Current AIC:", best_aic, "\n")
}
}
}
improve <- TRUE
while (improve) {
improve = FALSE
aiclist <- data.frame(var = character(), AIC = numeric())
for(var in setdiff(predictors, currentvars)){
fmla <- as.formula(paste(response, '~', paste(c(currentvars,var),collapse ='+')))
modelvglm <- try(vglm(fmla,family=cumulative(parallel=FALSE),data=winedata),silent = TRUE)
if(!inherits(modelvglm, 'try-error')){
modelaic <- AIC(modelvglm)
aiclist <- rbind(aiclist, data.frame(var=var, AIC = modelaic))
}
}
if (nrow(aic_list) > 0) {
bestrow <- aiclist[which.min(aic_list$AIC), ]
if (best_row$AIC < best_aic - 2) {  # AIC must improve by at least 2
bestaic <- best_row$AIC
currentvars <- c(current_vars, best_row$var)
improve <- TRUE
cat("Added:", best_row$var, "Current AIC:", best_aic, "\n")
}
}
}
improve <- TRUE
while (improve) {
improve = FALSE
aiclist <- data.frame(var = character(), AIC = numeric())
for(var in setdiff(predictors, currentvars)){
fmla <- as.formula(paste(response, '~', paste(c(currentvars,var),collapse ='+')))
modelvglm <- try(vglm(fmla,family=cumulative(parallel=FALSE),data=winedata),silent = TRUE)
if(!inherits(modelvglm, 'try-error')){
modelaic <- AIC(modelvglm)
aiclist <- rbind(aiclist, data.frame(var=var, AIC = modelaic))
}
}
if (nrow(aiclist) > 0) {
bestrow <- aiclist[which.min(aiclist$AIC), ]
if (bestrow$AIC < bestaic - 2) {  # AIC must improve by at least 2
bestaic <- best_row$AIC
currentvars <- c(current_vars, best_row$var)
improve <- TRUE
cat("Added:", bestrow$var, "Current AIC:", bestaic, "\n")
}
}
}
improve <- TRUE
while (improve) {
improve = FALSE
aiclist <- data.frame(var = character(), AIC = numeric())
for(var in setdiff(predictors, currentvars)){
fmla <- as.formula(paste(response, '~', paste(c(currentvars,var),collapse ='+')))
modelvglm <- try(vglm(fmla,family=cumulative(parallel=FALSE),data=winedata),silent = TRUE)
if(!inherits(modelvglm, 'try-error')){
modelaic <- AIC(modelvglm)
aiclist <- rbind(aiclist, data.frame(var=var, AIC = modelaic))
}
}
if (nrow(aiclist) > 0) {
bestrow <- aiclist[which.min(aiclist$AIC), ]
if (bestrow$AIC < bestaic - 2) {  # AIC must improve by at least 2
bestaic <- bestrow$AIC
currentvars <- c(currentvars, bestrow$var)
improve <- TRUE
cat("Added:", bestrow$var, "Current AIC:", bestaic, "\n")
}
}
}
improve <- TRUE
while (improve) {
improve = FALSE
aiclist <- data.frame(var = character(), AIC = numeric())
for(var in setdiff(predictors, currentvars)){
fmla <- as.formula(paste(response, '~', paste(c(currentvars,var),collapse ='+')))
modelvglm <- try(vglm(fmla,family=cumulative(parallel=FALSE),data=winedata),silent = TRUE)
if(!inherits(modelvglm, 'try-error')){
modelaic <- AIC(modelvglm)
aiclist <- rbind(aiclist, data.frame(var=var, AIC = modelaic))
}
}
if (nrow(aicresults) > 0 && !all(is.na(aicresults$AIC))) {
bestcandidate <- aicresults[which.min(aicresults$AIC), ]
if (!is.na(bestcandidate$AIC) && bestcandidate$AIC < bestaic - 2) {
bestaic <- bestcandidate$AIC
currentvars <- c(currentvars, bestcandidate$var)
improve <- TRUE
cat("Added:", bestcandidate$var, " | New AIC:", bestaic, "\n")
}
}
}
improve <- TRUE
while (improve) {
improve = FALSE
aiclist <- data.frame(var = character(), AIC = numeric())
for(var in setdiff(predictors, currentvars)){
fmla <- as.formula(paste(response, '~', paste(c(currentvars,var),collapse ='+')))
modelvglm <- try(vglm(fmla,family=cumulative(parallel=FALSE),data=winedata),silent = TRUE)
if(!inherits(modelvglm, 'try-error')){
modelaic <- AIC(modelvglm)
aiclist <- rbind(aiclist, data.frame(var=var, AIC = modelaic))
}
}
if (nrow(aiclist) > 0 && !all(is.na(aiclist$AIC))) {
bestcandidate <- aiclist[which.min(aiclist$AIC), ]
if (!is.na(bestcandidate$AIC) && bestcandidate$AIC < bestaic - 2) {
bestaic <- bestcandidate$AIC
currentvars <- c(currentvars, bestcandidate$var)
improve <- TRUE
cat("Added:", bestcandidate$var, " | New AIC:", bestaic, "\n")
}
}
}
warnings()
ggplot(winedata, aes(x = x1)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of x1")
library(ggplot2)
ggplot(winedata, aes(x = x1)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of x1")
winedata <- read.table('/Users/max/Documents/Github/Red-wine-quality-regression-analysis/data/winequality-red.csv',sep =';',header = TRUE)
ggplot(winedata, aes(x = fixed.acidity)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of x1")
[1:11]
predictors <- colnames(winedata)[1:11]
print(predictors)
summary(winedata[predictors])
ggplot(winedata, aes(x = predictors[2])) +
geom_histogram(bins = 30) +
ggtitle("Distribution of x")
ggplot(winedata, aes(x = predictors[1])) +
geom_histogram(bins = 30) +
ggtitle("Distribution of x")
ggplot(winedata, aes(x = pH)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of x")
print(predictors[1])
ggplot(winedata, aes(x = predictors[1])) +
geom_histogram(bins = 30) +
ggtitle("Distribution of x")
ggplot(winedata, aes(x = pH)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of x")
ggplot(winedata, aes(x = fixed.acidity)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of x")
winedata$fixed.acidity <- log1p(winedata$fixed.acidity)
ggplot(winedata, aes(x = fixed.acidity)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of x")
ggplot(winedata, aes(x = volatile.acidity)) +
geom_histogram(bins = 30) +
ggtitle("Distribution of x")
winedata$fixed.acidity <- log1p(winedata$volatile.acidity)
ggplot(winedata, aes(x = volatile.acidity)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
winedata <- read.table('/Users/max/Documents/Github/Red-wine-quality-regression-analysis/data/winequality-red.csv',sep =';',header = TRUE)
library(ggplot2)
ggplot(winedata, aes(x = volatile.acidity)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
winedata$volatile.acidity <- log1p(winedata$volatile.acidity)
ggplot(winedata, aes(x = volatile.acidity)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
winedata$fixed.acidity <- log1p(winedata$fixed.acidity)
ggplot(winedata, aes(x = citric.acid)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
winedata$citric.acid <- scale::winsorize(winedata$citric.acid)
winedata$citric.acid <- scales::winsorize(winedata$citric.acid)
winedata2 <- read.table('/Users/max/Documents/Github/Red-wine-quality-regression-analysis/data/winequality-red.csv',sep =';',header = TRUE)
winedata$citric.acid <- log1p(winedata$citric.acid)
ggplot(winedata, aes(x = citric.acid)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
winedata$citric.acid <- log1p(winedata2$citric.acid)
ggplot(winedata, aes(x = citric.acid)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
winedata$citric.acid <- log1p(winedata2$citric.acid)
ggplot(winedata, aes(x = citric.acid)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
winedata <- read.table('/Users/max/Documents/Github/Red-wine-quality-regression-analysis/data/winequality-red.csv',sep =';',header = TRUE)
ggplot(winedata, aes(x = citric.acid)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
k <- sqrt(winedata2$citric.acid)
k <- sqrt(winedata$citric.acid)
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
k <- log1p(winedata$citric.acid)
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
k <- (winedata$citric.acid)
print(k)[1:20]
count(k=0)
length(k=0)
length(k=0.00)
length(k[k=0.00])
k <- (winedata$citric.acid)
length(k[k=0])
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
View(winedata)
length(k[k<0.01])
k <- log1p(winedata$citric.acid)
length(k[k<0.01])
winedata$volatile.acidity <- log1p(winedata$volatile.acidity)
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
k <- log2p(winedata$citric.acid)
k <- (winedata$citric.acid) #zero-inflated data
k <- log(winedata$citric.acid+2) #zero-inflated data
length(k[k<0.01])
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
k <- cut(winedata$citric.acid, breaks = c(-0.1,0,0.3,0.6,inf),labels = c('zero','low','medium','high')) #zero-inflated data, we see abnormal number of 0, so we create indicator varible for them
k <- cut(winedata$citric.acid, breaks = c(-0.1,0,0.3,0.6,Inf),labels = c('zero','low','medium','high')) #zero-inflated data, we see abnormal number of 0, so we create indicator varible for them
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
length(k[k='zero'])
length(k[k='low'])
length(k[k=1])
length(k[k=2])
table(k)
k <- cut(winedata$citric.acid, breaks = c(-0.1,0,0.3,0.6,Inf),labels = c('zero','low','medium','high'),ordered_result = TRUE) #zero-inflated data, we see abnormal number of 0, so we create indicator varible for them
table(k)
winedata$citric.acid <- cut(winedata$citric.acid, breaks = c(-0.1,0,0.3,0.6,Inf),labels = c('zero','low','medium','high'),ordered_result = TRUE) #zero-inflated data, we see abnormal number of 0, so we create indicator varible for them
winedata$citric.acid <- cut(winedata$citric.acid, breaks = c(-0.1,0,0.3,0.6,Inf),labels = c('zero','low','medium','high')) #zero-inflated data, we see abnormal number of 0, so we make it a factor, notice we also worry about non-monotonic effect, so we do not order it
ggplot(winedata, aes(x = residual.sugar)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
ggplot(winedata, aes(x = residual.sugar)) + geom_histogram(bins = 30) + ggtitle("Distribution of x") + coord_cartesian(xlim = c(0, 6l))
ggplot(winedata, aes(x = residual.sugar)) + geom_histogram(bins = 30) + ggtitle("Distribution of x") + coord_cartesian(xlim = c(0, 6))
k <- log1p(winedata$residual.sugar)
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
k <- sqrt(winedata$residual.sugar)
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
k <- log1p(winedata$residual.sugar)
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
winedata$residual.sugar <- log1p(winedata$residual.sugar)
ggplot(winedata, aes(x = chlorides)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
ggplot(winedata, aes(x = free.sulfur.dioxide)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
k <- log1p(winedata$free.sulfur.dioxide)
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
k <- sqrt(winedata$free.sulfur.dioxide)
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
k <- log(winedata$free.sulfur.dioxide)
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
k <- log1p(winedata$free.sulfur.dioxide)
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
k <- winedata$total.sulfur.dioxide
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
k <- log1p(winedata$total.sulfur.dioxide)
winedata$fixed.acidity <- log1p(winedata$fixed.acidity) #right skewed
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
k <- (winedata$total.sulfur.dioxide)
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
k <- log1p(winedata$total.sulfur.dioxide)
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
k <- (winedata$density)
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
k <- (winedata$pH)
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
k <- (winedata$sulphates)
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
k <- log1p(winedata$sulphates)
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
ggplot(winedata, aes(x = sulphates)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
k <- (winedata$alcohol)
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
k <- log1p(winedata$alcohol)
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
k <- sqrt(winedata$alcohol)
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
k <- log(winedata$alcohol)
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
k <- log(winedata$alcohol+2)
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
k <- log1p(winedata$alcohol)
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
k <- sqrt(winedata$alcohol)
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
ggplot(winedata, aes(x = alcohol)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
k <- (winedata$alcohol)^0.25
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
winedata <- read.table('/Users/max/Documents/Github/Red-wine-quality-regression-analysis/data/winequality-red.csv',sep =';',header = TRUE)
ggplot(winedata, aes(x = citric.acid)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
install.packages("caret")
library(caret)
k <- BoxCoxTrans(winedata$citric.acid)
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
k <- (winedata$alcohol)
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
k <- (winedata$alcohol)^0.1
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
k <- (winedata$alcohol)^0.5
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
k <- (winedata$alcohol)
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
k <- log(winedata$alcohol)
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
library(car)
skewness(winedata$alcohol)
g <- powerTransform(winedata$alcohol ~ 1)
summary(g)
g1 <- bcPower(winedata$alcoho, g$lambda)
par(mfrow = c(1, 2))
hist(winedata$alcohol, main = "Original x", xlab = "x", col = "skyblue")
hist(g1, main = "Box-Cox Transformed x", xlab = "x (transformed)", col = "lightgreen")
View(g)
ggplot(winedata, aes(x = g1)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
ggplot(winedata, aes(x = g)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
ggplot(winedata, aes(x = g1)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
g1 <- bcPower(winedata$alcohol, g$lambda)
ggplot(winedata, aes(x = g1)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
k <- log1p(winedata$alcohol)
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
k <- (winedata$alcohol)^0.1
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
k <- (winedata$alcohol)
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
k <- log1p(winedata$alcohol)
ggplot(winedata, aes(x = k)) + geom_histogram(bins = 30) + ggtitle("Distribution of x")
winedata <- read.table('/Users/max/Documents/Github/Red-wine-quality-regression-analysis/data/winequality-red.csv',sep =';',header = TRUE)
winedata$fixed.acidity <- log1p(winedata$fixed.acidity) #right skewed
winedata$volatile.acidity <- log1p(winedata$volatile.acidity) #right skewed
winedata$citric.acid <- cut(winedata$citric.acid, breaks = c(-0.1,0,0.3,0.6,Inf),labels = c('zero','low','medium','high')) #zero-inflated data, we see abnormal number of 0, so we make it a factor, notice we also worry about non-monotonic effect, so we do not order it
winedata$free.sulfur.dioxide <- log1p(winedata$free.sulfur.dioxide) #right skewed, and after transformation, it has gaps between data ranges, but it is tolarable
winedata$total.sulfur.dioxide <- log1p(winedata$total.sulfur.dioxide) #right skewed
winedata$alcohol <- log1p(winedata$alcohol) #right skewed
winedata$fixed.acidity <- scale(winedata$fixed.acidity)
winedata$volatile.acidity <- scale(winedata$volatile.acidity)
winedata$citric.acid <- scale(winedata$citric.acid)
winedata <- read.table('/Users/max/Documents/Github/Red-wine-quality-regression-analysis/data/winequality-red.csv',sep =';',header = TRUE)
winedata$fixed.acidity <- log1p(winedata$fixed.acidity) #right skewed
winedata$volatile.acidity <- log1p(winedata$volatile.acidity) #right skewed
winedata$citric.acid <- cut(winedata$citric.acid, breaks = c(-0.1,0,0.3,0.6,Inf),labels = c('zero','low','medium','high')) #zero-inflated data, we see abnormal number of 0, so we make it a factor, notice we also worry about non-monotonic effect, so we do not order it
winedata$free.sulfur.dioxide <- log1p(winedata$free.sulfur.dioxide) #right skewed, and after transformation, it has gaps between data ranges, but it is tolarable
winedata$total.sulfur.dioxide <- log1p(winedata$total.sulfur.dioxide) #right skewed
winedata$alcohol <- log1p(winedata$alcohol) #right skewed
winedata$fixed.acidity <- scale(winedata$fixed.acidity)
winedata$volatile.acidity <- scale(winedata$volatile.acidity)
winedata$residual.sugar <- scale(winedata$residual.sugar)
winedata$chlorides <- scale(winedata$chlorides)
winedata$free.sulfur.dioxide <- scale(winedata$free.sulfur.dioxide)
winedata$total.sulfur.dioxide <- scale(winedata$total.sulfur.dioxide)
winedata$density <- scale(winedata$density)
winedata$pH <- scale(winedata$pH)
winedata$sulphates <- scale(winedata$sulphates)
winedata$alcohol <- scale(winedata$alcohol)
fittest <- polr(as.factor(quality) ~ ., data = winedata, Hess = TRUE)
coef(summary(fittest))
brant(fittest)
library(brant)
brant(fittest)
summary(winedata[predictors])
nullvglm <- vglm(as.formula(paste(response,'~1')), family = cumulative(parallel = FALSE),data = winedata)
bestaic <- AIC(nullvglm)
currentvars <- c()
nullvglm <- vglm(as.formula(paste(response,'~1')), family = cumulative(parallel = FALSE),data = winedata)
library(VGAM)
predictors <- c("fixed.acidity", "volatile.acidity", "citric.acid", "residual.sugar", "chlorides", "free.sulfur.dioxide", "total.sulfur.dioxide",'density','pH','sulphates','alcohol')
response <- "quality"
nullvglm <- vglm(as.formula(paste(response,'~1')), family = cumulative(parallel = FALSE),data = winedata)
bestaic <- AIC(nullvglm)
currentvars <- c()
improve <- TRUE
while (improve) {
improve = FALSE
aiclist <- data.frame(var = character(), AIC = numeric())
for(var in setdiff(predictors, currentvars)){
fmla <- as.formula(paste(response, '~', paste(c(currentvars,var),collapse ='+')))
modelvglm <- try(vglm(fmla,family=cumulative(parallel=FALSE),data=winedata),silent = TRUE)
if(!inherits(modelvglm, 'try-error')){
modelaic <- AIC(modelvglm)
aiclist <- rbind(aiclist, data.frame(var=var, AIC = modelaic))
}
}
if (nrow(aiclist) > 0 && !all(is.na(aiclist$AIC))) {
bestcandidate <- aiclist[which.min(aiclist$AIC), ]
if (!is.na(bestcandidate$AIC) && bestcandidate$AIC < bestaic - 2) {
bestaic <- bestcandidate$AIC
currentvars <- c(currentvars, bestcandidate$var)
improve <- TRUE
cat("Added:", bestcandidate$var, " | New AIC:", bestaic, "\n")
}
}
}
fitfullvglm <- vglm(quality ~ ., family = cumulative(parallel = FALSE), data = winedata)
fitfull <- vglm(quality ~ 1, family = cumulative(parallel = FALSE), data = winedata)
predictors <- colnames(datanames[,'quality'])
predictors <- colnames(winedata[,'quality'])
print(predictors)
predictors <- colnames(winedata[,-'quality'])
predictors <- colnames(winedata[1:11])
print(predictors)
fitfs <- step4vglm(object = fitnull, scope = predictors., direction = 'forward',trace = TRUE)
fitfull <- vglm(quality ~ 1, family = cumulative(parallel = FALSE), data = winedata)
fitfs <- step4vglm(object = fitnull, scope = predictors., direction = 'forward',trace = TRUE)
fitfs <- step4vglm(object = fitnull, scope = free.sulfur.dioxide + pH + total.sulfur.dioxide + chlorides + sulphates + volatile.acidity + alcohol, direction = 'forward',trace = TRUE)
library(ordinalNet)
X <- model.matrix(~ (free.sulfur.dioxide + pH + total.sulfur.dioxide + chlorides + sulphates + volatile.acidity + alcohol)^2, data = winedata)[ ,-1]
y <- as.factor(as.ordered(winedata$quality))
fitonet <- ordinalNet(X,y, family = 'cumulative', link ='logit', alpha = 0.5)
pred1 <- predict(fitonet,X,type ='class')
confusionmatrix <- table(Predicted = pred1, Actual = y)
mean(pred1 ==y)
kruskal.test(fixed.acidity ~ quality, data = winedata)
kruskal.test(volatile.acidity ~ quality, data = winedata)
kruskal.test(citric.acid ~ quality, data = winedata)
kruskal.test(residual.sugar ~ quality, data = winedata)
kruskal.test(chlorides ~ quality, data = winedata)
kruskal.test(free.sulfur.dioxide ~ quality, data = winedata)
kruskal.test(total.sulfur.dioxide ~ quality, data = winedata)
kruskal.test(density ~ quality, data = winedata)
kruskal.test(pH ~ quality, data = winedata)
kruskal.test(sulphates ~ quality, data = winedata)
kruskal.test(alcohol ~ quality, data = winedata)
fitgom <- vglm(quality ~ free.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides +free.sulfur.dioxide + total.sulfur.dioxide + density + pH + sulphates + alcohol, family = cumulative(parallel = FALSE), data = winedata)
fitgom <- vglm(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides +free.sulfur.dioxide + total.sulfur.dioxide + density + pH + sulphates + alcohol, family = cumulative(parallel = FALSE), data = winedata)
vif(fitgom)
fitgom <- vglm(quality ~ fixed.acidity + volatile.acidity + citric.acid + residual.sugar + chlorides +free.sulfur.dioxide + total.sulfur.dioxide + density + pH + sulphates + alcohol, family = cumulative(parallel = FALSE), data = winedata)
predictors <- colnames(winedata[1:11])
predictors <- colnames(winedata[1:11])
for (var in predictors) {
formula_str <- as.formula(paste("y ~", var))
fit <- try(vglm(formula_str, family = cumulative(parallel = FALSE), data = mydata), silent = TRUE)
if (!inherits(fit, "try-error")) {
print(paste(var, "fits successfully"))
}
}
predictors <- setdiff(names(winedata), "quality")
predictors <- setdiff(names(winedata), "quality")
for (var in predictors) {
formula_str <- as.formula(paste("y ~", var))
fit <- try(vglm(formula_str, family = cumulative(parallel = FALSE), data = mydata), silent = TRUE)
if (!inherits(fit, "try-error")) {
print(paste(var, "fits successfully"))
}
}
fitvar <- vglm(quality ~ fixed.acidity, family = cumulative(parallel = FALSE), data = winedata)
summary(fitvar)
fitvar <- polr(quality ~ fixed.acidity,data = winedata, Hess = TRUE)
fitvar <- polr(as.factor(quality) ~ fixed.acidity,data = winedata, Hess = TRUE)
summary(fitvar)
brant(fitvar)
fitvar <- vglm(quality ~ fixed.acidity + volatile.acidity, family = cumulative(parallel = FALSE), data = winedata)
cor(winedata[, c("fixed.acidity", "volatile.acidity")], use = "complete.obs")
table(winedata$quality)
boxplot(fixed.acidity ~ quality, data = winedata)
boxplot(volatile.acidity ~ quality, data = winedata)
