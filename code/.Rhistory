ad.test(rstandard(fit))
library(nortest)
ad.test(rstandard(fit))
winedata <- read.table('winequality-red.csv', sep = ';', header = TRUE)
winedata <- read.table('winequality-red.csv', sep = ';', header = TRUE)
getwd()
winedata <- read.table('winequality-red.csv', sep = ';', header = TRUE)
fit <- lm(quality ~ ., data = winedata)
winedata <- read.table('winequality-red.csv', sep = ';', header = TRUE)
winedata <- read.table('winequality-red.csv', sep = ';', header = TRUE)
winedata <- read.table('winequality-red.csv', sep = ';', header = TRUE)
fit <- lm(quality ~ ., data = winedata)
summary(fit)
plot(fitted.values(fit), rstandard(fit))
winedata <- read.table('winequality-red.csv', sep = ';', header = TRUE)
winedata <- read.table('D:\\Backup\\Documents\\GitHub\\portfolio\\data\\winequality-red.csv', sep = ';', header = TRUE)
fit <- lm(quality ~ ., data = winedata)
summary(fit)
plot(fitted.values(fit), rstandard(fit))
ad.test(rstandard(fit))
qqnorm(rstandard(fit))
abline(a=0,b=1, h =2)
abline(a=0,b=1)
qqnorm(rstandard(fit))
abline(a=0,b=1)
plot(rstandard(fit))
plot(fitted.values(fit), rstandard(fit))
fit <- glm(quality ~ ., data = winedata)
View(fit)
summary(fit)
plot(rstandard(fit))
plot(fitted.values(fit), rstandard(fit))
fit <- lm(quality ~ ., data = winedata)
summary(fit)
summary(fit)
plot(rstandard(fit))
plot(fitted.values(fit), rstandard(fit))
plot(fitted.values(fit), jitter(rstandard(fit)))
View(fit)
ad.test(rstandard(fit))
library(MASS)
fitsl <- step(fit, direction = 'backward')
fitsl <- step(fit, direction = 'both')
summary(fitsl)
anova(fitsl,fit)
AIC(fitsl,fit)
qqnorm(rstandard(fit))
plot(rstandard(fit))
length(winedata$quality[winedata$quality > 3]) + length(winedata$quality[winedata$quality < -3])
length(rstandard(fit)[rstandard(fit) > 3]) + length(rstandard(fit)[rstandard(fit) < -3])
length(rstandard(fit)[rstandard(fit) < -3])
length(rstandard(fit)[rstandard(fit) > 4]) + length(rstandard(fit)[rstandard(fit) < -4])
winedata <- read.table('D:\\Backup\\Documents\\GitHub\\portfolio\\data\\winequality-red.csv', sep = ';', header = TRUE)
vif(fitsl)
library(car)
vif(fitsl)
summary(fitsl)
anova(fitsl,fit)
anova(fitsl,fit)
summary(fitsl)
summary(fitsl)
ad.test(rstandard(fitsl))
ad.test(rstandard(fit))
plot(free.sulfur.dioxide, quality)
plot(free.sulfur.dioxide, quality, data= winedata)
plot(free.sulfur.dioxide, quality, data= winedata)
plot(winedata$free.sulfur.dioxide, winedata$quality)
plot(winedata$ph, winedata$quality)
plot(rstandard(winedata$ph), rstandard(winedata$quality))
plot(fit)
winedata <- read.table('winequality-red.csv')
winedata <- read.table('/Users/max/Documents/Github/Red-wine-quality-regression-analysis/data/winequality-red.csv')
winedata <- read.table('/Users/max/Documents/Github/Red-wine-quality-regression-analysis/data/winequality-red.csv',sep =';',header = TRUE)
View(winedata)
fitsl <- step(fit, direction = 'both')
fit <- lm(quality ~ ., data = winedata)
library(MASS)
fitsl <- step(fit, direction = 'both')
fito <- clm(as.factor(quality)~ ., data = winedata, link = 'logit')
install.packages('ordinal')
library(ordinal)
fito <- clm(as.factor(quality)~ ., data = winedata, link = 'logit')
View(fit)
View(fit)
View(fit)
winedata <- read.table('/Users/max/Documents/Github/Red-wine-quality-regression-analysis/data/winequality-red.csv',sep =';',header = TRUE)
fito <- clm(as.factor(quality)~ ., data = winedata, link = 'logit')
View(winedata)
vif(fito)
library(car)
vif(fito)
fit <- lm(quality ~ ., data = winedata)
vif(fit)
View(fit)
library(nortest)
library(MASS)
fitsl <- step(fit, direction = 'both')
fito <- clm(as.factor(quality)~ ., data = winedata, link = 'logit')
library(ordinal)
fito <- clm(as.factor(quality)~ ., data = winedata, link = 'logit')
fito <- clm(as.factor(quality)~ free.sulfur.dioxide + pH + total.sulfur.dioxide + chlorides + sulphates + volatile.acidity + alcohol, data = winedata, link = 'logit')
vif(fito)
library(car)
vif(fito)
fitnull < -clm(as.factor(quality) ~ 1, data = winedata, link = 'logit')
fitnull <- clm(as.factor(quality) ~ 1, data = winedata, link = 'logit')
anova(fito, fitnull)
negelkerke(fit = fito, null = fitnull)
library(MASS)
negelkerke(fit = fito, null = fitnull)
install.packages(rcompanion)
install.packages('rcompanion')
library(rcompanion)
negelkerke(fit = fito, null = fitnull)
install.packages('Desctools')
install.packages('DescTools')
install.packages("DescTools")
library(DescTools)
negelkerke(fit = fito, null = fitnull)
nagelkerke(fit = fito, null = fitnull)
summary(fito)
confint(fito)
exp(coef(fito))
plot(winedata$quality, length(winedata$quality))
plot(winedata$quality, count(winedata$quality))
ggplot(winedata$quality, count(winedata$quality))
library(ggplot2)
ggplot(winedata$quality, count(winedata$quality))
ggplot(winedata, aes(x=y)) + geom_bar + labs(title ='barplot of red wine quaility', x = 'quality', y = 'sample number')
ggplot(winedata, aes(x=y)) + geom_bar(fill = 'steelblue') + labs(title ='barplot of red wine quaility', x = 'quality', y = 'sample number') + theme_classic()
ggplot(winedata, aes(x= quality)) + geom_bar(fill = 'steelblue') + labs(title ='barplot of red wine quaility', x = 'quality', y = 'sample number') + theme_classic()
ggplot(winedata, aes(x= quality)) + geom_bar(fill = 'steelblue') + geom_text(stat ='count', aes(label = ..count..), vjust = -0.5) + labs(title ='barplot of red wine quaility', x = 'quality', y = 'sample number') + theme_classic()
exp(confint(fito))
fito2 <- clm(as.factor(quality)~ pH + total.sulfur.dioxide + chlorides + sulphates + volatile.acidity + alcohol, data = winedata, link = 'logit')
anova(fito,fito2)
predict(fito, type = 'prob')
fito <- clm(as.factor(quality)~ free.sulfur.dioxide + pH + total.sulfur.dioxide + chlorides + sulphates + volatile.acidity + alcohol, data = winedata, link = 'loglog')
fito <- clm(as.factor(quality)~ free.sulfur.dioxide + pH + total.sulfur.dioxide + chlorides + sulphates + volatile.acidity + alcohol, data = winedata, link = 'logit')
fitologlog <- clm(as.factor(quality)~ free.sulfur.dioxide + pH + total.sulfur.dioxide + chlorides + sulphates + volatile.acidity + alcohol, data = winedata, link = 'loglog')
AIC(fito, fitologlog)
fitoint <- clm(as.factor(quality) ~ free.sulfur.dioxide * total.sulfur.dioxide + pH * sulphates + volatile.acidity * alcohol + chlorides * pH + sulphates * alcohol, data = winedata, link = 'logit')
fitoint <- clm(as.factor(quality) ~ free.sulfur.dioxide * total.sulfur.dioxide + pH * sulphates + volatile.acidity * alcohol, data = winedata, link = 'logit')
fitoint <- clm(as.factor(quality) ~ (free.sulfur.dioxide + pH + total.sulfur.dioxide + chlorides + sulphates + volatile.acidity + alcohol)^2, data = winedata, link = 'logit')
fitointpolr <- polr(as.factor(quality) ~ (free.sulfur.dioxide + pH + total.sulfur.dioxide + chlorides + sulphates + volatile.acidity + alcohol)^2, data = winedata, hess = TRUE)
fitointpolr <- polr(as.factor(quality) ~ (free.sulfur.dioxide + pH + total.sulfur.dioxide + chlorides + sulphates + volatile.acidity + alcohol)^2, data = winedata, hess = TRUE)
install.packages('ordinalNet')
library(ordinal)
library(ordinalNet)
X = model.matrix(~ (free.sulfur.dioxide + pH + total.sulfur.dioxide + chlorides + sulphates + volatile.acidity + alcohol)^2, data = winedata)[ ,-1]
View(X)
X = model.matrix(~ (free.sulfur.dioxide + pH + total.sulfur.dioxide + chlorides + sulphates + volatile.acidity + alcohol)^2, data = winedata)
qr(X)$rank
X = model.matrix(~ (free.sulfur.dioxide + pH + total.sulfur.dioxide + chlorides + sulphates + volatile.acidity + alcohol)^2, data = winedata)[ ,-1]
fitonet <- ordinalNet(X,Y, family = 'cumulative', link ='logit', alpha = 0.5)
Y = winedata$quality
fitonet <- ordinalNet(X,Y, family = 'cumulative', link ='logit', alpha = 0.5)
Y = as.numeric(winedata$quality)
fitonet <- ordinalNet(X,Y, family = 'cumulative', link ='logit', alpha = 0.5)
winedata$quality <- as.ordered(winedata$quality)
Y = as.numeric(winedata$quality)
fitonet <- ordinalNet(X,Y, family = 'cumulative', link ='logit', alpha = 0.5)
X = model.matrix(~ (free.sulfur.dioxide + pH + total.sulfur.dioxide + chlorides + sulphates + volatile.acidity + alcohol)^2, data = winedata)[ ,-1]
Y <- as.numeric(winedata$quality)
X <- model.matrix(~ (free.sulfur.dioxide + pH + total.sulfur.dioxide + chlorides + sulphates + volatile.acidity + alcohol)^2, data = winedata)[ ,-1]
fitonet <- ordinalNet(X,Y, family = 'cumulative', link ='logit', alpha = 0.5)
winedata$quality <- as.ordered(winedata$quality)
View(winedata)
Y <- as.factor(winedata$quality)
fitonet <- ordinalNet(X,Y, family = 'cumulative', link ='logit', alpha = 0.5)
winedata$quality <- as.ordered(winedata$quality)
Y <- as.factor(winedata$quality)
Y <- as.numeric(winedata$quality)
fitonet <- ordinalNet(X,Y, family = 'cumulative', link ='logit', alpha = 0.5)
is.vector(Y)
Y <- as.numeric(winedata$quality)
is.vector(Y)
is.matrix(Y)
is.facotr(Y)
is.factor(Y)
str(y)
y <- as.numeric(winedata$quality)
str(y)
class(y)
is.numeric(y)
is.vector(y)
str(X)
is.matrix(X)
is.numeric(X)
dim(X)
y <- as.numeric(as.ordered(winedata$quality))
fitonet <- ordinalNet(X,y, family = 'cumulative', link ='logit', alpha = 0.5)
winedata$quality <- as.factor(as.ordered(winedata$quality))
View(winedata)
table(winedata$quality)
unique(winedata$quality)
winedata$quality <- as.factor(as.ordered(winedata$quality))
fitonet <- ordinalNet(X,y, family = 'cumulative', link ='logit', alpha = 0.5)
y <- as.factor(as.ordered(winedata$quality))
fitonet <- ordinalNet(X,y, family = 'cumulative', link ='logit', alpha = 0.5)
summary(fitonet)
coef(fitonet, matrix = TRUE)
selection <- coefmatrix[apply(coefmatrix != 0,1,any),]
coefmatrix <- coef(fitonet, matrix = TRUE)
print(selection)
selection <- coefmatrix[apply(coefmatrix != 0,1,any),]
print(selection)
fitonet <- ordinalNet(X,y, family = 'cumulative', link ='logit', alpha = 0)
coefmatrix <- coef(fitonet, matrix = TRUE)
selection <- coefmatrix[apply(coefmatrix != 0,1,any),]
print(selection)
fitonet <- ordinalNet(X,y, family = 'cumulative', link ='logit', alpha = 1)
coefmatrix <- coef(fitonet, matrix = TRUE)
selection <- coefmatrix[apply(coefmatrix != 0,1,any),]
print(selection)
fitonet <- ordinalNet(X,y, family = 'cumulative', link ='logit', alpha = 0.5)
coefmatrix <- coef(fitonet, matrix = TRUE)
selection <- coefmatrix[apply(coefmatrix != 0,1,any),]
print(selection)
pred1 <- predict(fitonet,X,type ='class')
confusionmatrix <- table(Predicted = pred1, Actual = y)
mean(pred ==y)
mean(pred1 ==y)
fittest <- polr(as.factor(quality) ~ free.sulfur.dioxide + pH + total.sulfur.dioxide + chlorides + sulphates + volatile.acidity + alcohol, data = winedata, hess = TRUE)
fittest <- polr(as.factor(quality) ~ free.sulfur.dioxide + pH + total.sulfur.dioxide + chlorides + sulphates + volatile.acidity + alcohol, data = winedata, Hess = TRUE)
brant(fittest)
library(MASS)
brant(fittest)
install.packages("brant")
library(brant)
brant(fittest)
plot(quality ~ total.sulfur.dioxide, data=winedata, pch = 16, xlab = 'total sulfur dioxide', ylab = 'quality')
plot(quality ~ total.sulfur.dioxide, data=winedata, xlab = 'total sulfur dioxide', ylab = 'quality')
plot(as.numeric(quality) ~ total.sulfur.dioxide, data=winedata, xlab = 'total sulfur dioxide', ylab = 'quality')
model_ppom <- vglm(
quality ~ free.sulfur.dioxide + pH + total.sulfur.dioxide + chlorides + sulphates + volatile.acidity + alcohol,
data = wine_data,
family = cumulative(parallel = TRUE ~ free.sulfur.dioxide + pH + chlorides + sulphates,
parallel = FALSE ~ total.sulfur.dioxide + alcohol + volatile.acidity)
)
library(VGAM)
install.packages("VGAM")
library(VGAM)
model_ppom <- vglm(
quality ~ free.sulfur.dioxide + pH + total.sulfur.dioxide + chlorides + sulphates + volatile.acidity + alcohol,
data = wine_data,
family = cumulative(parallel = TRUE ~ free.sulfur.dioxide + pH + chlorides + sulphates,
parallel = FALSE ~ total.sulfur.dioxide + alcohol + volatile.acidity)
)
model_ppom <- vglm(
quality ~ free.sulfur.dioxide + pH + total.sulfur.dioxide + chlorides + sulphates + volatile.acidity + alcohol,
data = winedata,
family = cumulative(parallel = TRUE ~ free.sulfur.dioxide + pH + chlorides + sulphates,
parallel = FALSE ~ total.sulfur.dioxide + alcohol + volatile.acidity)
)
fitppom <- vglm(
quality ~ free.sulfur.dioxide + pH + total.sulfur.dioxide + chlorides + sulphates + volatile.acidity + alcohol,
data = wine_data,
family = cumulative(parallel = FALSE)
)
fitppom <- vglm(
quality ~ free.sulfur.dioxide + pH + total.sulfur.dioxide + chlorides + sulphates + volatile.acidity + alcohol,
data = winedata,
family = cumulative(parallel = FALSE)
)
